{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Layout/Layout.module.css","components/Title/Title.module.css","components/Button/Button.module.css","redux/phoneBook/phonebook-actions.js","redux/phoneBook/phoneBook-operations.js","redux/phoneBook/phoneBook-selectors.js","redux/phoneBook/phoneBook-reducer.js","redux/counterButton/button-action.js","redux/counterButton/button-reducer.js","redux/store.js","components/Title/Title.js","components/Layout/Layout.js","components/DublicateAlert/DublicateAlert.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/CounterButton.js","views/phoneBookView.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","get","data","name","number","contact","post","contactId","delete","getFilter","state","phoneBook","filter","getAllContacts","items","getLoading","loading","getfilteredContacts","createSelector","contacts","console","log","toLowerCase","includes","createReducer","payload","action","id","_","combineReducers","increment","value","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phoneBookReducer","counterButton","counterButtonReducer","Title","label","className","styles","title","Layout","children","layout","CSSTransition","in","appear","timeout","classNames","unmountOnExit","DublicateAlert","Button","type","onClick","button","ContactForm","dublicateName","handleChange","e","target","setState","handleSubmit","preventDefault","props","elements","length","setTimeout","onSubmit","alert","this","Boolean","onChange","Component","defaultProps","connect","phoneBookSelectors","phoneBookOperations","onChangeFilter","event","ContactListItem","onRemove","item","actions","searchName","filteredContacts","onRemoveContact","TransitionGroup","component","map","clicks","phoneBookView","fetchContacts","isLoadingPhoneBook","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4f3656d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2THQn\",\"actions\":\"ContactListItem_actions__2eHF6\",\"name\":\"ContactListItem_name__32Yb3\",\"number\":\"ContactListItem_number__3CKnU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3PvPc\",\"appear\":\"Layout_appear__28yHE\",\"appearActive\":\"Layout_appearActive__28_al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1jlrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'phoneBook/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'phoneBook/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('phoneBook/fetchContactsError');\n\nexport const addContactRequest = createAction('phoneBook/addContactRequest');\nexport const addContactSuccess = createAction('phoneBook/addContactSuccess');\nexport const addContactError = createAction('phoneBook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phoneBook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phoneBook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phoneBook/deleteContactError');\n\nexport const changeFilter = createAction('phoneBook/changeFilter');\n","import axios from 'axios';\n\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.phoneBook.loading;\n\nconst getFilter = state => state.phoneBook.filter;\n\nconst getAllContacts = state => state.phoneBook.items;\n\nconst getfilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    console.log('Состовляем новый массив видимых контактов');\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n    return filteredContacts;\n  },\n);\n\nexport default {\n  getLoading,\n  getFilter,\n  getfilteredContacts,\n  getAllContacts,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './phonebook-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const increment = createAction('counterButton/add');\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\n\nimport { increment } from './button-action';\n\nconst value = createReducer(0, {\n  [increment]: (state, _) => state + 1,\n});\n\nexport default combineReducers({\n  value,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  // persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { phoneBookReducer } from './phoneBook';\nimport counterButtonReducer from './counterButton/button-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\n// const middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: phoneBookReducer,\n    counterButton: counterButtonReducer,\n  },\n  middleware,\n});\n\nexport default store;\n","import PropTypes from 'prop-types';\n\nimport styles from './Title.module.css';\n\nconst Title = ({ label }) => <h1 className={styles.title}>{label}</h1>;\n\nTitle.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport Title from '../Title/Title';\nimport { CSSTransition } from 'react-transition-group';\n\nimport styles from './Layout.module.css';\n\nconst Layout = ({ children }) => (\n  <div className={styles.layout}>\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames={styles}\n      unmountOnExit\n    >\n      <Title label=\"Phonebook\" />\n    </CSSTransition>\n    {children}\n  </div>\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './DublicateAlert.css';\n\nexport default function DublicateAlert({ name = 'no name' }) {\n  return (\n    <div className=\"dublucate-name\">\n      <p>\"{name}\" is already in contacts</p>\n    </div>\n  );\n}\n\nDublicateAlert.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nconst Button = ({ label, type = 'button', onClick = () => null }) => (\n  <button className={styles.button} type={type} onClick={onClick}>\n    {label}\n  </button>\n);\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { phoneBookOperations, phoneBookSelectors } from '../../redux/phoneBook';\n\nimport DublicateAlert from '../DublicateAlert/DublicateAlert';\nimport Button from '../Button/Button';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './ContactForm.css';\n\nclass ContactForm extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  state = {\n    name: '',\n    number: '',\n    dublicateName: false,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n\n    if (name !== '' && number !== '') {\n      const duplicate = this.props.contacts.filter(\n        contact => contact.name === e.target.elements[0].value,\n      );\n\n      if (duplicate.length > 0) {\n        this.setState({ dublicateName: !this.state.dublicateName });\n\n        return setTimeout(() => {\n          this.setState({\n            dublicateName: false,\n          });\n        }, 2500);\n      }\n\n      const onSubmit = this.props.onSubmit;\n      onSubmit(name, number);\n      this.setState({ name: '', number: '' });\n      return;\n    }\n    if (name === '') {\n      alert('write NAME!');\n    } else if (number === '') {\n      alert('write NUMBER!!');\n    }\n  };\n\n  render() {\n    const { name, number, dublicateName } = this.state;\n\n    return (\n      <>\n        <CSSTransition\n          in={dublicateName && Boolean(name)}\n          classNames=\"dublucate-name-slideIn\"\n          timeout={250}\n          unmountOnExit\n        >\n          <DublicateAlert name={name} />\n        </CSSTransition>\n\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <label className=\"form-label\">\n            Name\n            <input\n              className=\"form-input\"\n              type=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n            />\n          </label>\n\n          <label className=\"form-label\">\n            Number\n            <input\n              className=\"form-input\"\n              type=\"tel\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n            />\n          </label>\n\n          <Button label=\"Add contact\" type=\"submit\" />\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: phoneBookSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(phoneBookOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { phoneBookSelectors, changeFilter } from '../../redux/phoneBook';\nimport './Filter.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className=\"form\">\n      <label className=\"form-label\">\n        Find contact by name\n        <input\n          type=\"text\"\n          className=\"form-input\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n\n  onChangeFilter: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  value: phoneBookSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: event => dispatch(changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => (\n  <li key={id} className={styles.item}>\n    <p className={styles.name}>{name}: </p>\n    <div className={styles.actions}>\n      <p className={styles.number}>{number}</p>\n      <Button\n        label=\"Delete\"\n        type=\"button\"\n        className=\"ContactList-button\"\n        onClick={onRemove}\n      />\n    </div>\n  </li>\n);\n\nexport default ContactListItem;\n\nContactListItem.defaultProps = {\n  name: 'noName',\n  number: '123 45 67',\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { phoneBookOperations, phoneBookSelectors } from '../../redux/phoneBook';\nimport Filter from '../Filter/Filter';\nimport Title from '../Title/Title';\nimport './ContactList.css';\n\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = ({\n  filteredContacts,\n  contacts,\n  searchName,\n  onRemoveContact,\n}) =>\n  console.log('ContactList re-render') || (\n    <>\n      <CSSTransition\n        in={contacts.length > 1}\n        timeout={500}\n        classNames=\"filter-slideIn\"\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n\n      <CSSTransition\n        in={filteredContacts.length > 0}\n        timeout={500}\n        classNames=\"ContactList-title-slideIn\"\n        unmountOnExit\n      >\n        <Title label=\"Contacts\" />\n      </CSSTransition>\n\n      <CSSTransition\n        in={filteredContacts.length === 0 && contacts.length > 1}\n        timeout={500}\n        classNames=\"ContactList-title-slideIn\"\n        unmountOnExit\n      >\n        <Title label={`Contact name: \"${searchName}\"  not found`} />\n      </CSSTransition>\n\n      <TransitionGroup component=\"ul\" className=\"ContactList\">\n        {filteredContacts.map(({ id, name, number }) => (\n          <CSSTransition\n            key={id}\n            timeout={250}\n            classNames=\"ContactList-item-fade\"\n          >\n            <ContactListItem\n              id={id}\n              name={name}\n              number={number}\n              onRemove={() => onRemoveContact(id)}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      number: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ),\n  onRemoveContact: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  searchName: phoneBookSelectors.getFilter(state),\n  contacts: phoneBookSelectors.getAllContacts(state),\n  filteredContacts: phoneBookSelectors.getfilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveContact: contactId =>\n    dispatch(phoneBookOperations.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { increment } from 'redux/counterButton/button-action';\n\nfunction CounterButton({ clicks, onClick }) {\n  return (\n    <div className=\"counterButtonBachground\">\n      <h2>кнопка мемоизации</h2>\n      <button type=\"button\" onClick={onClick}>\n        Кликнули {clicks} раз\n      </button>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  clicks: state.counterButton.value,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: () => dispatch(increment()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterButton);\n","import { connect } from 'react-redux';\nimport { Component } from 'react';\nimport { phoneBookOperations, phoneBookSelectors } from '../redux/phoneBook';\nimport Layout from '../components/Layout';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport CounterButton from '../components/CounterButton';\n\nclass phoneBookView extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <>\n        <Layout>\n          <CounterButton />\n          {this.props.isLoadingPhoneBook && <h1>Загржаем...</h1>}\n          <ContactForm />\n\n          <ContactList />\n        </Layout>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isLoadingPhoneBook: phoneBookSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(phoneBookOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(phoneBookView);\n","import PhoneBookView from './views/phoneBookView';\n\nexport default function App() {\n  return <PhoneBookView />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}